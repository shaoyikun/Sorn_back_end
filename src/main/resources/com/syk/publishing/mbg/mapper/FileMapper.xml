<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syk.publishing.mbg.mapper.FileMapper">
  <resultMap id="BaseResultMap" type="com.syk.publishing.mbg.model.File">
    <id column="file_id" jdbcType="BIGINT" property="fileId" />
    <result column="fileUrl" jdbcType="VARCHAR" property="fileurl" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="fileName" jdbcType="VARCHAR" property="filename" />
    <result column="groupName" jdbcType="VARCHAR" property="groupname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    file_id, fileUrl, type, fileName, groupName
  </sql>
  <select id="selectByExample" parameterType="com.syk.publishing.mbg.model.FileExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from File
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from File
    where file_id = #{fileId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from File
    where file_id = #{fileId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.syk.publishing.mbg.model.FileExample">
    delete from File
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.syk.publishing.mbg.model.File">
    insert into File (file_id, fileUrl, type, 
      fileName, groupName)
    values (#{fileId,jdbcType=BIGINT}, #{fileurl,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, 
      #{filename,jdbcType=VARCHAR}, #{groupname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.syk.publishing.mbg.model.File">
    insert into File
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        file_id,
      </if>
      <if test="fileurl != null">
        fileUrl,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="filename != null">
        fileName,
      </if>
      <if test="groupname != null">
        groupName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        #{fileId,jdbcType=BIGINT},
      </if>
      <if test="fileurl != null">
        #{fileurl,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="groupname != null">
        #{groupname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.syk.publishing.mbg.model.FileExample" resultType="java.lang.Long">
    select count(*) from File
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update File
    <set>
      <if test="record.fileId != null">
        file_id = #{record.fileId,jdbcType=BIGINT},
      </if>
      <if test="record.fileurl != null">
        fileUrl = #{record.fileurl,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.filename != null">
        fileName = #{record.filename,jdbcType=VARCHAR},
      </if>
      <if test="record.groupname != null">
        groupName = #{record.groupname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update File
    set file_id = #{record.fileId,jdbcType=BIGINT},
      fileUrl = #{record.fileurl,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=CHAR},
      fileName = #{record.filename,jdbcType=VARCHAR},
      groupName = #{record.groupname,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.syk.publishing.mbg.model.File">
    update File
    <set>
      <if test="fileurl != null">
        fileUrl = #{fileurl,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="filename != null">
        fileName = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="groupname != null">
        groupName = #{groupname,jdbcType=VARCHAR},
      </if>
    </set>
    where file_id = #{fileId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.syk.publishing.mbg.model.File">
    update File
    set fileUrl = #{fileurl,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      fileName = #{filename,jdbcType=VARCHAR},
      groupName = #{groupname,jdbcType=VARCHAR}
    where file_id = #{fileId,jdbcType=BIGINT}
  </update>
</mapper>